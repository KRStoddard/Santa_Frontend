[{"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/reportWebVitals.js":"1","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/Home.js":"2","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/index.js":"3","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/App.js":"4","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/Join.js":"5","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/Login.js":"6","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/adminPage.js":"7","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/constants/index.js":"8"},{"size":362,"mtime":1606751224908,"results":"9","hashOfConfig":"10"},{"size":760,"mtime":1606756103605,"results":"11","hashOfConfig":"10"},{"size":541,"mtime":1606751632001,"results":"12","hashOfConfig":"10"},{"size":572,"mtime":1606833639823,"results":"13","hashOfConfig":"10"},{"size":665,"mtime":1606755971937,"results":"14","hashOfConfig":"10"},{"size":3865,"mtime":1606839432899,"results":"15","hashOfConfig":"10"},{"size":572,"mtime":1606836166445,"results":"16","hashOfConfig":"10"},{"size":274,"mtime":1606838656585,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jdzfg5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/reportWebVitals.js",[],["38","39"],"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/Home.js",[],"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/index.js",[],["40","41"],"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/App.js",["42"],"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/Join.js",[],["43","44"],"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/Login.js",["45"],"import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {API_ROOT, GET_HEADERS} from '../constants/index'\n\nexport default class Login extends React.Component{\n\n    state = {\n        type: 'login',\n        errors: \" \"\n    }\n\n    loginRender = () => {\n        return(\n            <>\n                <form onSubmit={this.loginSubmit}>\n                    <h2>Please Login</h2>\n                    <input type=\"text\" name=\"email\" placeholder=\"email\" />\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" /><br></br>\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <a className=\"accountCreate\" onClick={() => this.setState({type: 'signup'})}>Don't Have an Account? Create One!</a>\n            </>\n\n        )\n    }\n\n    loginSubmit = e => {\n        e.preventDefault()\n        const {email, password} = e.target\n        const reqObj = {\n            method: 'POST',\n            headers: GET_HEADERS(),\n            body: JSON.stringify({email: email.value, password: password.value})\n        }\n        fetch(`${API_ROOT}/admin/login`, reqObj)\n        .then(resp => resp.json())\n        .then(data => {\n            if (data.errors) {\n                this.setState({errors: data.errors})\n            } else {\n                console.log(data)\n                localStorage.setItem('adminToken', data.token)\n                this.props.history.push(`/adminPage/${data.admin.id}`)\n            }\n        })\n    }\n\n    createRender = () => {\n        return(\n        <>\n            <form onSubmit={this.submitForm}>\n                <h2>Create an Account</h2>\n                <input type=\"text\" name=\"first_name\" placeholder=\"First Name\" />\n                <input type=\"text\" name=\"last_name\" placeholder=\"Last Name\" /><br></br>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" /><br></br>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" />\n                <input type=\"password\" name=\"confirm\" placeholder=\"Confirm Password\" /><br></br>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </>\n        )\n    }\n\n    submitForm = e => {\n        e.preventDefault()\n        const {first_name, last_name, email, password, confirm} = e.target\n        if (password.value === confirm.value) {\n            this.sendFetch(first_name.value, last_name.value, email.value, password.value)\n        } else {\n            this.setState({type: 'signup', errors: 'Passwords do not match'})\n        }\n    }\n\n    sendFetch = (first_name, last_name, email, password) => {\n        const reqObj = {\n            method: 'POST',\n            headers: GET_HEADERS(),\n            body: JSON.stringify({admin: {first_name, last_name, email, password}})\n        }\n\n        fetch(`${API_ROOT}/admin`, reqObj)\n        .then(resp => resp.json())\n        .then(data => {\n            if (data.errors) {\n                this.setState({type: 'signup', errors: data.errors})\n            } else {\n                localStorage.setItem('adminToken', data.token)\n                this.props.history.push(`/adminPage/${data.admin.id}`)\n            }\n        })\n    }\n\n    renderErrors = () => {\n        return(\n        <>\n            <p className=\"errors\">{this.state.errors}</p>\n        </>\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"screen\">\n            <div className=\"pageBody\">\n            <div className=\"welcome\">\n                <Link to=\"/\"><h1 className=\"ss\">❄❄❄ Secret Santa ❄❄❄</h1></Link>\n            </div>\n            <div className=\"options\">\n                {this.renderErrors()}\n                {this.state.type === 'login' ? \n                this.loginRender()\n                :\n                this.createRender()}\n            </div>\n            </div>\n            </div>\n        )\n    }\n}","/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/components/adminPage.js",[],"/Users/krs93/Development/code/my_projects/secret_santa/frontend/src/constants/index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"46","replacedBy":"56"},{"ruleId":"48","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":21,"column":17,"nodeType":"60","endLine":21,"endColumn":94},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["61"],["62"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]